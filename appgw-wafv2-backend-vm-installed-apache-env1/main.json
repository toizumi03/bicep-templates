{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.35.1.17967",
      "templateHash": "8439227626207819231"
    }
  },
  "parameters": {
    "locationSite1": {
      "type": "string"
    },
    "vmAdminUsername": {
      "type": "string"
    },
    "vmAdminPassword": {
      "type": "securestring"
    },
    "enablediagnostics": {
      "type": "bool"
    },
    "enabledBastion": {
      "type": "bool"
    }
  },
  "variables": {
    "$fxv#0": "I2Nsb3VkLWNvbmZpZwojIOODkeODg+OCseODvOOCuOabtOaWsApwYWNrYWdlX3VwZGF0ZTogdHJ1ZQpwYWNrYWdlc191cGdyYWRlOiB0cnVlCiMg44OR44OD44Kx44O844K444Kk44Oz44K544OI44O844OrCnBhY2thZ2VzOgogIC0gYXBhY2hlMgojIOOCs+ODnuODs+ODieWun+ihjApydW5jbWQ6CiAgLSBzdWRvIHN5c3RlbWN0bCBzdGFydCBhcGFjaGUyLnNlcnZpY2U=",
    "numberOfInstances": 2,
    "logAnalyticsWorkspace": "[format('{0}la', uniqueString(resourceGroup().id))]"
  },
  "resources": [
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2023-04-01",
      "name": "cloud-vnet",
      "location": "[parameters('locationSite1')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "10.0.0.0/16"
          ]
        },
        "subnets": [
          {
            "name": "default",
            "properties": {
              "addressPrefix": "10.0.0.0/24",
              "networkSecurityGroup": {
                "id": "[reference(resourceId('Microsoft.Resources/deployments', 'NetworkSecurityGroupSite1'), '2022-09-01').outputs.nsgId.value]"
              }
            }
          },
          {
            "name": "appgwsubnet",
            "properties": {
              "addressPrefix": "10.0.1.0/24"
            }
          },
          {
            "name": "backendsubnet",
            "properties": {
              "addressPrefix": "10.0.2.0/24"
            }
          },
          {
            "name": "AzureBastionSubnet",
            "properties": {
              "addressPrefix": "10.0.3.0/24"
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'NetworkSecurityGroupSite1')]"
      ]
    },
    {
      "condition": "[parameters('enablediagnostics')]",
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2022-10-01",
      "name": "[variables('logAnalyticsWorkspace')]",
      "location": "[parameters('locationSite1')]"
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "NetworkSecurityGroupSite1",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('locationSite1')]"
          },
          "name": {
            "value": "nsg-site1"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.35.1.17967",
              "templateHash": "15724041213341219053"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "name": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2019-11-01",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "properties": {}
            }
          ],
          "outputs": {
            "nsgId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('name'))]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "appgw-wafv2",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('locationSite1')]"
          },
          "appGwName": {
            "value": "appgw-wafv2"
          },
          "maxCapacity": {
            "value": 5
          },
          "minCapacity": {
            "value": 0
          },
          "backendHttpSettings_port": {
            "value": 80
          },
          "backendHttpSettings_protocol": {
            "value": "Http"
          },
          "subnet_id": {
            "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', 'cloud-vnet'), '2023-04-01').subnets[1].id]"
          },
          "backendVMPrivateIPs": {
            "copy": [
              {
                "name": "value",
                "count": "[length(range(0, variables('numberOfInstances')))]",
                "input": "[reference(resourceId('Microsoft.Resources/deployments', format('backend-vm{0}', range(0, variables('numberOfInstances'))[range(0, variables('numberOfInstances'))[copyIndex('value')]])), '2022-09-01').outputs.privateIP.value]"
              }
            ]
          },
          "enablediagnostics": {
            "value": "[parameters('enablediagnostics')]"
          },
          "wafPolicyId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'wafPolicy'), '2022-09-01').outputs.policyId.value]"
          },
          "logAnalyticsID": {
            "value": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWorkspace'))]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.35.1.17967",
              "templateHash": "11027999020849274387"
            }
          },
          "parameters": {
            "appGwName": {
              "type": "string"
            },
            "location": {
              "type": "string"
            },
            "maxCapacity": {
              "type": "int"
            },
            "minCapacity": {
              "type": "int"
            },
            "backendHttpSettings_port": {
              "type": "int"
            },
            "backendHttpSettings_protocol": {
              "type": "string"
            },
            "subnet_id": {
              "type": "string"
            },
            "backendVMPrivateIPs": {
              "type": "array"
            },
            "enablediagnostics": {
              "type": "bool",
              "defaultValue": false
            },
            "wafPolicyId": {
              "type": "string"
            },
            "logAnalyticsID": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/publicIPAddresses",
              "apiVersion": "2023-04-01",
              "name": "[format('{0}-pip', parameters('appGwName'))]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "Standard"
              },
              "properties": {
                "publicIPAllocationMethod": "static"
              }
            },
            {
              "type": "Microsoft.Network/applicationGateways",
              "apiVersion": "2023-04-01",
              "name": "[parameters('appGwName')]",
              "location": "[parameters('location')]",
              "tags": {
                "tagName1": "toizumi_recipes"
              },
              "properties": {
                "sku": {
                  "name": "WAF_v2",
                  "tier": "WAF_v2"
                },
                "autoscaleConfiguration": {
                  "maxCapacity": "[parameters('maxCapacity')]",
                  "minCapacity": "[parameters('minCapacity')]"
                },
                "gatewayIPConfigurations": [
                  {
                    "name": "appGatewayIpConfig",
                    "properties": {
                      "subnet": {
                        "id": "[parameters('subnet_id')]"
                      }
                    }
                  }
                ],
                "frontendIPConfigurations": [
                  {
                    "name": "appGwPublicFrontendIp",
                    "properties": {
                      "publicIPAddress": {
                        "id": "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}-pip', parameters('appGwName')))]"
                      }
                    }
                  },
                  {
                    "name": "appGwPrivateFrontendIp",
                    "properties": {
                      "privateIPAllocationMethod": "Static",
                      "subnet": {
                        "id": "[parameters('subnet_id')]"
                      },
                      "privateIPAddress": "10.0.1.10"
                    }
                  }
                ],
                "frontendPorts": [
                  {
                    "name": "port_80",
                    "properties": {
                      "port": 80
                    }
                  }
                ],
                "backendAddressPools": [
                  {
                    "name": "BackendPool1",
                    "properties": {
                      "copy": [
                        {
                          "name": "backendAddresses",
                          "count": "[length(parameters('backendVMPrivateIPs'))]",
                          "input": {
                            "ipAddress": "[parameters('backendVMPrivateIPs')[copyIndex('backendAddresses')]]"
                          }
                        }
                      ]
                    }
                  }
                ],
                "backendHttpSettingsCollection": [
                  {
                    "name": "backendHttpSettings",
                    "properties": {
                      "cookieBasedAffinity": "Disabled",
                      "port": "[parameters('backendHttpSettings_port')]",
                      "protocol": "[parameters('backendHttpSettings_protocol')]"
                    }
                  }
                ],
                "httpListeners": [
                  {
                    "name": "http-lisner",
                    "properties": {
                      "frontendIPConfiguration": {
                        "id": "[resourceId('Microsoft.Network/applicationGateways/frontendIPConfigurations', parameters('appGwName'), 'appGwPublicFrontendIp')]"
                      },
                      "frontendPort": {
                        "id": "[resourceId('Microsoft.Network/applicationGateways/frontendPorts', parameters('appGwName'), 'port_80')]"
                      },
                      "protocol": "Http",
                      "requireServerNameIndication": false
                    }
                  }
                ],
                "requestRoutingRules": [
                  {
                    "name": "requestRoutingRule1",
                    "properties": {
                      "backendAddressPool": {
                        "id": "[resourceId('Microsoft.Network/applicationGateways/backendAddressPools', parameters('appGwName'), 'BackendPool1')]"
                      },
                      "backendHttpSettings": {
                        "id": "[resourceId('Microsoft.Network/applicationGateways/backendHttpSettingsCollection', parameters('appGwName'), 'backendHttpSettings')]"
                      },
                      "httpListener": {
                        "id": "[resourceId('Microsoft.Network/applicationGateways/httpListeners', parameters('appGwName'), 'http-lisner')]"
                      },
                      "priority": 100,
                      "ruleType": "Basic"
                    }
                  }
                ],
                "firewallPolicy": {
                  "id": "[parameters('wafPolicyId')]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}-pip', parameters('appGwName')))]"
              ]
            },
            {
              "condition": "[parameters('enablediagnostics')]",
              "type": "Microsoft.Insights/diagnosticSettings",
              "apiVersion": "2021-05-01-preview",
              "scope": "[format('Microsoft.Network/applicationGateways/{0}', parameters('appGwName'))]",
              "name": "[parameters('appGwName')]",
              "properties": {
                "workspaceId": "[parameters('logAnalyticsID')]",
                "logs": [
                  {
                    "category": null,
                    "categoryGroup": "allLogs",
                    "enabled": true,
                    "retentionPolicy": {
                      "enabled": false,
                      "days": 0
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/applicationGateways', parameters('appGwName'))]"
              ]
            }
          ],
          "outputs": {
            "appgw_backendpool_id": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/applicationGateways', parameters('appGwName')), '2023-04-01').backendAddressPools[0].id]"
            }
          }
        }
      },
      "dependsOn": [
        "backendvms",
        "[resourceId('Microsoft.Network/virtualNetworks', 'cloud-vnet')]",
        "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWorkspace'))]",
        "[resourceId('Microsoft.Resources/deployments', 'wafPolicy')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "wafPolicy",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "wafName": {
            "value": "appGwWafPolicy"
          },
          "location": {
            "value": "[parameters('locationSite1')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.35.1.17967",
              "templateHash": "10138595593772313188"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "wafName": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/ApplicationGatewayWebApplicationFirewallPolicies",
              "apiVersion": "2023-04-01",
              "name": "[parameters('wafName')]",
              "location": "[parameters('location')]",
              "properties": {
                "customRules": [],
                "policySettings": {
                  "requestBodyCheck": true,
                  "maxRequestBodySizeInKb": 128,
                  "fileUploadLimitInMb": 100,
                  "state": "Enabled",
                  "mode": "Detection",
                  "requestBodyInspectLimitInKB": 128,
                  "fileUploadEnforcement": true,
                  "requestBodyEnforcement": true
                },
                "managedRules": {
                  "managedRuleSets": [
                    {
                      "ruleSetType": "OWASP",
                      "ruleSetVersion": "3.2",
                      "ruleGroupOverrides": []
                    }
                  ],
                  "exclusions": []
                }
              }
            }
          ],
          "outputs": {
            "policyId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/ApplicationGatewayWebApplicationFirewallPolicies', parameters('wafName'))]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "client-ubuntu-vm",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "vmName": {
            "value": "client-ubuntu-vm"
          },
          "VMadminUsername": {
            "value": "[parameters('vmAdminUsername')]"
          },
          "VMadminpassword": {
            "value": "[parameters('vmAdminPassword')]"
          },
          "location": {
            "value": "[parameters('locationSite1')]"
          },
          "subnetId": {
            "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', 'cloud-vnet'), '2023-04-01').subnets[0].id]"
          },
          "usePublicIP": {
            "value": true
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.35.1.17967",
              "templateHash": "8126729785369130619"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "zones": {
              "type": "array",
              "defaultValue": []
            },
            "subnetId": {
              "type": "string"
            },
            "vmName": {
              "type": "string"
            },
            "VMadminUsername": {
              "type": "string",
              "defaultValue": ""
            },
            "VMadminpassword": {
              "type": "securestring"
            },
            "hostGroupId": {
              "type": "string",
              "defaultValue": ""
            },
            "hostId": {
              "type": "string",
              "defaultValue": ""
            },
            "vmSize": {
              "type": "string",
              "defaultValue": "Standard_D2s_v3"
            },
            "enableManagedIdentity": {
              "type": "bool",
              "defaultValue": false
            },
            "privateIpAddress": {
              "type": "string",
              "defaultValue": ""
            },
            "nicnsg": {
              "type": "string",
              "defaultValue": ""
            },
            "customData": {
              "type": "string",
              "defaultValue": ""
            },
            "enableNetWatchExtention": {
              "type": "bool",
              "defaultValue": false
            },
            "enableIPForwarding": {
              "type": "bool",
              "defaultValue": false
            },
            "usePublicIP": {
              "type": "bool",
              "defaultValue": false
            },
            "enableAcceleratedNetworking": {
              "type": "bool",
              "defaultValue": false
            },
            "avsetId": {
              "type": "string",
              "defaultValue": ""
            },
            "applicationGatewayBackendAddressPoolsId": {
              "type": "string",
              "defaultValue": ""
            },
            "loadBalancerBackendAddressPoolsId": {
              "type": "string",
              "defaultValue": ""
            },
            "useExistingVM": {
              "type": "bool",
              "defaultValue": false
            }
          },
          "variables": {
            "vmNameSuffix": "[replace(parameters('vmName'), 'vm-', '')]"
          },
          "resources": [
            {
              "condition": "[and(not(parameters('useExistingVM')), parameters('enableNetWatchExtention'))]",
              "type": "Microsoft.Compute/virtualMachines/extensions",
              "apiVersion": "2023-03-01",
              "name": "[format('{0}/{1}', parameters('vmName'), 'AzureNetworkWatcherExtension')]",
              "location": "[parameters('location')]",
              "properties": {
                "autoUpgradeMinorVersion": true,
                "publisher": "Microsoft.Azure.NetworkWatcher",
                "type": "NetworkWatcherAgentLinux",
                "typeHandlerVersion": "1.4"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
              ]
            },
            {
              "condition": "[parameters('usePublicIP')]",
              "type": "Microsoft.Network/publicIPAddresses",
              "apiVersion": "2023-04-01",
              "name": "[format('{0}-pip', variables('vmNameSuffix'))]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "Standard",
                "tier": "Regional"
              },
              "properties": {
                "publicIPAllocationMethod": "Static",
                "deleteOption": "Delete"
              }
            },
            {
              "type": "Microsoft.Network/networkInterfaces",
              "apiVersion": "2022-07-01",
              "name": "[format('nic-{0}', variables('vmNameSuffix'))]",
              "location": "[parameters('location')]",
              "properties": {
                "networkSecurityGroup": "[if(not(equals(parameters('nicnsg'), '')), createObject('id', parameters('nicnsg')), null())]",
                "ipConfigurations": [
                  {
                    "name": "ipconfig1",
                    "properties": {
                      "subnet": {
                        "id": "[parameters('subnetId')]"
                      },
                      "privateIPAllocationMethod": "[if(not(equals(parameters('privateIpAddress'), '')), 'Static', 'Dynamic')]",
                      "privateIPAddress": "[if(not(equals(parameters('privateIpAddress'), '')), parameters('privateIpAddress'), null())]",
                      "publicIPAddress": "[if(parameters('usePublicIP'), createObject('id', resourceId('Microsoft.Network/publicIPAddresses', format('{0}-pip', variables('vmNameSuffix')))), null())]",
                      "loadBalancerBackendAddressPools": "[if(not(equals(parameters('loadBalancerBackendAddressPoolsId'), '')), createArray(createObject('id', parameters('loadBalancerBackendAddressPoolsId'))), createArray())]",
                      "applicationGatewayBackendAddressPools": "[if(not(equals(parameters('applicationGatewayBackendAddressPoolsId'), '')), createArray(createObject('id', parameters('applicationGatewayBackendAddressPoolsId'))), createArray())]"
                    }
                  }
                ],
                "enableIPForwarding": "[parameters('enableIPForwarding')]",
                "enableAcceleratedNetworking": "[parameters('enableAcceleratedNetworking')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}-pip', variables('vmNameSuffix')))]"
              ]
            },
            {
              "condition": "[not(parameters('useExistingVM'))]",
              "type": "Microsoft.Compute/virtualMachines",
              "apiVersion": "2023-03-01",
              "name": "[parameters('vmName')]",
              "location": "[parameters('location')]",
              "identity": "[if(parameters('enableManagedIdentity'), createObject('type', 'SystemAssigned'), null())]",
              "zones": "[parameters('zones')]",
              "properties": {
                "hostGroup": "[if(not(equals(parameters('hostGroupId'), '')), createObject('id', parameters('hostGroupId')), null())]",
                "host": "[if(not(equals(parameters('hostId'), '')), createObject('id', parameters('hostId')), null())]",
                "hardwareProfile": {
                  "vmSize": "[parameters('vmSize')]"
                },
                "storageProfile": {
                  "osDisk": {
                    "createOption": "FromImage",
                    "managedDisk": {
                      "storageAccountType": "StandardSSD_LRS"
                    },
                    "deleteOption": "Delete"
                  },
                  "imageReference": {
                    "publisher": "canonical",
                    "offer": "0001-com-ubuntu-server-focal",
                    "sku": "20_04-lts-gen2",
                    "version": "latest"
                  }
                },
                "networkProfile": {
                  "networkInterfaces": [
                    {
                      "id": "[resourceId('Microsoft.Network/networkInterfaces', format('nic-{0}', variables('vmNameSuffix')))]",
                      "properties": {
                        "deleteOption": "Delete"
                      }
                    }
                  ]
                },
                "osProfile": {
                  "computerName": "[parameters('vmName')]",
                  "adminUsername": "[parameters('VMadminUsername')]",
                  "adminPassword": "[parameters('VMadminpassword')]",
                  "customData": "[if(equals(parameters('customData'), ''), null(), parameters('customData'))]"
                },
                "diagnosticsProfile": {
                  "bootDiagnostics": {
                    "enabled": true
                  }
                },
                "availabilitySet": "[if(equals(parameters('avsetId'), ''), null(), createObject('id', parameters('avsetId')))]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', format('nic-{0}', variables('vmNameSuffix')))]"
              ]
            }
          ],
          "outputs": {
            "vmName": {
              "type": "string",
              "value": "[parameters('vmName')]"
            },
            "vmId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
            },
            "nicName": {
              "type": "string",
              "value": "[format('nic-{0}', variables('vmNameSuffix'))]"
            },
            "privateIP": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/networkInterfaces', format('nic-{0}', variables('vmNameSuffix'))), '2022-07-01').ipConfigurations[0].properties.privateIPAddress]"
            },
            "principalId": {
              "type": "string",
              "value": "[if(parameters('enableManagedIdentity'), reference(resourceId('Microsoft.Compute/virtualMachines', parameters('vmName')), '2023-03-01', 'full').identity.principalId, '')]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', 'cloud-vnet')]"
      ]
    },
    {
      "copy": {
        "name": "backendvms",
        "count": "[length(range(0, variables('numberOfInstances')))]"
      },
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('backend-vm{0}', range(0, variables('numberOfInstances'))[copyIndex()])]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "vmName": {
            "value": "[format('backendvm{0}', range(0, variables('numberOfInstances'))[copyIndex()])]"
          },
          "VMadminUsername": {
            "value": "[parameters('vmAdminUsername')]"
          },
          "VMadminpassword": {
            "value": "[parameters('vmAdminPassword')]"
          },
          "location": {
            "value": "[parameters('locationSite1')]"
          },
          "subnetId": {
            "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', 'cloud-vnet'), '2023-04-01').subnets[2].id]"
          },
          "customData": {
            "value": "[variables('$fxv#0')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.35.1.17967",
              "templateHash": "8126729785369130619"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "zones": {
              "type": "array",
              "defaultValue": []
            },
            "subnetId": {
              "type": "string"
            },
            "vmName": {
              "type": "string"
            },
            "VMadminUsername": {
              "type": "string",
              "defaultValue": ""
            },
            "VMadminpassword": {
              "type": "securestring"
            },
            "hostGroupId": {
              "type": "string",
              "defaultValue": ""
            },
            "hostId": {
              "type": "string",
              "defaultValue": ""
            },
            "vmSize": {
              "type": "string",
              "defaultValue": "Standard_D2s_v3"
            },
            "enableManagedIdentity": {
              "type": "bool",
              "defaultValue": false
            },
            "privateIpAddress": {
              "type": "string",
              "defaultValue": ""
            },
            "nicnsg": {
              "type": "string",
              "defaultValue": ""
            },
            "customData": {
              "type": "string",
              "defaultValue": ""
            },
            "enableNetWatchExtention": {
              "type": "bool",
              "defaultValue": false
            },
            "enableIPForwarding": {
              "type": "bool",
              "defaultValue": false
            },
            "usePublicIP": {
              "type": "bool",
              "defaultValue": false
            },
            "enableAcceleratedNetworking": {
              "type": "bool",
              "defaultValue": false
            },
            "avsetId": {
              "type": "string",
              "defaultValue": ""
            },
            "applicationGatewayBackendAddressPoolsId": {
              "type": "string",
              "defaultValue": ""
            },
            "loadBalancerBackendAddressPoolsId": {
              "type": "string",
              "defaultValue": ""
            },
            "useExistingVM": {
              "type": "bool",
              "defaultValue": false
            }
          },
          "variables": {
            "vmNameSuffix": "[replace(parameters('vmName'), 'vm-', '')]"
          },
          "resources": [
            {
              "condition": "[and(not(parameters('useExistingVM')), parameters('enableNetWatchExtention'))]",
              "type": "Microsoft.Compute/virtualMachines/extensions",
              "apiVersion": "2023-03-01",
              "name": "[format('{0}/{1}', parameters('vmName'), 'AzureNetworkWatcherExtension')]",
              "location": "[parameters('location')]",
              "properties": {
                "autoUpgradeMinorVersion": true,
                "publisher": "Microsoft.Azure.NetworkWatcher",
                "type": "NetworkWatcherAgentLinux",
                "typeHandlerVersion": "1.4"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
              ]
            },
            {
              "condition": "[parameters('usePublicIP')]",
              "type": "Microsoft.Network/publicIPAddresses",
              "apiVersion": "2023-04-01",
              "name": "[format('{0}-pip', variables('vmNameSuffix'))]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "Standard",
                "tier": "Regional"
              },
              "properties": {
                "publicIPAllocationMethod": "Static",
                "deleteOption": "Delete"
              }
            },
            {
              "type": "Microsoft.Network/networkInterfaces",
              "apiVersion": "2022-07-01",
              "name": "[format('nic-{0}', variables('vmNameSuffix'))]",
              "location": "[parameters('location')]",
              "properties": {
                "networkSecurityGroup": "[if(not(equals(parameters('nicnsg'), '')), createObject('id', parameters('nicnsg')), null())]",
                "ipConfigurations": [
                  {
                    "name": "ipconfig1",
                    "properties": {
                      "subnet": {
                        "id": "[parameters('subnetId')]"
                      },
                      "privateIPAllocationMethod": "[if(not(equals(parameters('privateIpAddress'), '')), 'Static', 'Dynamic')]",
                      "privateIPAddress": "[if(not(equals(parameters('privateIpAddress'), '')), parameters('privateIpAddress'), null())]",
                      "publicIPAddress": "[if(parameters('usePublicIP'), createObject('id', resourceId('Microsoft.Network/publicIPAddresses', format('{0}-pip', variables('vmNameSuffix')))), null())]",
                      "loadBalancerBackendAddressPools": "[if(not(equals(parameters('loadBalancerBackendAddressPoolsId'), '')), createArray(createObject('id', parameters('loadBalancerBackendAddressPoolsId'))), createArray())]",
                      "applicationGatewayBackendAddressPools": "[if(not(equals(parameters('applicationGatewayBackendAddressPoolsId'), '')), createArray(createObject('id', parameters('applicationGatewayBackendAddressPoolsId'))), createArray())]"
                    }
                  }
                ],
                "enableIPForwarding": "[parameters('enableIPForwarding')]",
                "enableAcceleratedNetworking": "[parameters('enableAcceleratedNetworking')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}-pip', variables('vmNameSuffix')))]"
              ]
            },
            {
              "condition": "[not(parameters('useExistingVM'))]",
              "type": "Microsoft.Compute/virtualMachines",
              "apiVersion": "2023-03-01",
              "name": "[parameters('vmName')]",
              "location": "[parameters('location')]",
              "identity": "[if(parameters('enableManagedIdentity'), createObject('type', 'SystemAssigned'), null())]",
              "zones": "[parameters('zones')]",
              "properties": {
                "hostGroup": "[if(not(equals(parameters('hostGroupId'), '')), createObject('id', parameters('hostGroupId')), null())]",
                "host": "[if(not(equals(parameters('hostId'), '')), createObject('id', parameters('hostId')), null())]",
                "hardwareProfile": {
                  "vmSize": "[parameters('vmSize')]"
                },
                "storageProfile": {
                  "osDisk": {
                    "createOption": "FromImage",
                    "managedDisk": {
                      "storageAccountType": "StandardSSD_LRS"
                    },
                    "deleteOption": "Delete"
                  },
                  "imageReference": {
                    "publisher": "canonical",
                    "offer": "0001-com-ubuntu-server-focal",
                    "sku": "20_04-lts-gen2",
                    "version": "latest"
                  }
                },
                "networkProfile": {
                  "networkInterfaces": [
                    {
                      "id": "[resourceId('Microsoft.Network/networkInterfaces', format('nic-{0}', variables('vmNameSuffix')))]",
                      "properties": {
                        "deleteOption": "Delete"
                      }
                    }
                  ]
                },
                "osProfile": {
                  "computerName": "[parameters('vmName')]",
                  "adminUsername": "[parameters('VMadminUsername')]",
                  "adminPassword": "[parameters('VMadminpassword')]",
                  "customData": "[if(equals(parameters('customData'), ''), null(), parameters('customData'))]"
                },
                "diagnosticsProfile": {
                  "bootDiagnostics": {
                    "enabled": true
                  }
                },
                "availabilitySet": "[if(equals(parameters('avsetId'), ''), null(), createObject('id', parameters('avsetId')))]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', format('nic-{0}', variables('vmNameSuffix')))]"
              ]
            }
          ],
          "outputs": {
            "vmName": {
              "type": "string",
              "value": "[parameters('vmName')]"
            },
            "vmId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
            },
            "nicName": {
              "type": "string",
              "value": "[format('nic-{0}', variables('vmNameSuffix'))]"
            },
            "privateIP": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/networkInterfaces', format('nic-{0}', variables('vmNameSuffix'))), '2022-07-01').ipConfigurations[0].properties.privateIPAddress]"
            },
            "principalId": {
              "type": "string",
              "value": "[if(parameters('enableManagedIdentity'), reference(resourceId('Microsoft.Compute/virtualMachines', parameters('vmName')), '2023-03-01', 'full').identity.principalId, '')]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', 'cloud-vnet')]"
      ]
    },
    {
      "condition": "[parameters('enabledBastion')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "azureBastion",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "bastionName": {
            "value": "azureBastion"
          },
          "location": {
            "value": "[parameters('locationSite1')]"
          },
          "bastionsku": {
            "value": "Standard"
          },
          "subnetid": {
            "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', 'cloud-vnet'), '2023-04-01').subnets[3].id]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.35.1.17967",
              "templateHash": "4862828539737652392"
            }
          },
          "parameters": {
            "bastionName": {
              "type": "string"
            },
            "location": {
              "type": "string"
            },
            "subnetid": {
              "type": "string"
            },
            "bastionsku": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/publicIPAddresses",
              "apiVersion": "2023-04-01",
              "name": "bastion-pip",
              "location": "[parameters('location')]",
              "sku": {
                "name": "Standard"
              },
              "properties": {
                "publicIPAllocationMethod": "static"
              }
            },
            {
              "type": "Microsoft.Network/bastionHosts",
              "apiVersion": "2023-04-01",
              "name": "[parameters('bastionName')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "[parameters('bastionsku')]"
              },
              "properties": {
                "ipConfigurations": [
                  {
                    "name": "ipconfig1",
                    "properties": {
                      "subnet": {
                        "id": "[parameters('subnetid')]"
                      },
                      "publicIPAddress": {
                        "id": "[resourceId('Microsoft.Network/publicIPAddresses', 'bastion-pip')]"
                      }
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', 'bastion-pip')]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', 'cloud-vnet')]"
      ]
    }
  ]
}